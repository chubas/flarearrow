netplex {
  service {
    name = "Flarearrow test server";
    protocol {
      name = "http";
      address {
        type = "internet";
        bind = "localhost:5000";
      };
    };
    processor {
      type = "nethttpd";
      host {
        pref_name = "localhost";
        pref_port = 5000;
        names = "*:0";
        uri {
          path = "/";
          method {
            allow = "POST GET";
            service {
              type = "file";
              docroot = "/home/victor/flarearrow/public";
              media_types_file = "/etc/mime.types";
              enable_listings = true;
            }
          }
        };
        uri {
          path = "/hello_world";
          service {
            type = "dynamic";
            handler = "hello_world";
          }
        };
        uri {
          path = "/oper";
          service {
            type = "dynamic";
            handler = "oper";
          }
        };
        uri {
          path = "/headers";
          service {
            type = "dynamic";
            handler = "headers";
          }
        };
        uri {
          path = "/numbers";
          service {
            type = "dynamic";
            handler = "numbers";
          }
        };
        uri {
          path = "/register";
          service {
            type = "dynamic";
            handler = "register";
          }
        };
        uri {
          path = "/play";
          service {
            type = "dynamic";
            handler = "play";
          }
        };
        uri {
          path = "/login";
          service {
            type = "dynamic";
            handler = "login";
          }
        };
        uri {
          path = "/logout";
          service {
            type = "dynamic";
            handler = "logout";
          }
        };
        uri {
          path = "/guess";
          service {
            type = "dynamic";
            handler = "guess";
          }
        };
      }
    };
    workload_manager {
      type = "dynamic";
      max_jobs_per_thread = 1;
      min_free_jobs_capacity = 1;
      max_free_jobs_capacity = 1;
      max_threads = 20;
    };
  }
}

